{"version":3,"sources":["components/stats/Stats.Component.jsx","components/calificadormetro/CalificadorMetro.Component.js","components/newevaluacion/NewEvaluacion.Form.js","components/newevaluacion/NewEvaluacion.View.js","redux/account/account.types.js","redux/account/account.actions.js","redux/notification/notification.types.js","redux/notification/notification.actions.js","redux/account/account.selectors.js","components/routes/Routes.js","components/request/AxiosRequests.js","components/request/ClienteRequest.Component.js","components/request/EvaluacionRequest.Component.js","components/newevaluacion/NewEvaluacionForm.Component.js","pages/index/Index.Page.js","components/utils/DateParser.js","components/headerlist/HeaderList.Component.js","components/paginator/Paginator.Component.js","components/modaledit/ModalEdit.Component.js","components/modaledit/ModalRemove.Component.js","components/list/ListItem.Component.js","components/list/ListEvaluacion.Component.js","pages/evaluaciones/Evaluacion.Page.js","pages/notfound/NotFound.Page.js","redux/notification/notification.selectors.js","components/toast/Toast.Component.js","App.js","serviceWorker.js","redux/account/account.reducer.js","redux/notification/notification.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["Message","count","StarItem","value","index","onChange","color","Col","lg","md","xs","style","cursor","onClick","fontSize","fill","position","top","left","CalificadorMetro","items","i","push","key","Row","marginBottom","NewForm","account","nombre","email","submit","disabled","useState","calificacion","setCalificacion","initials","name","useEffect","initialValues","onSubmit","values","actions","valEmail","error","test","validateEmail","valName","validateUsername","setErrors","handleChange","handleSubmit","errors","InputGroup","className","Prepend","Text","id","FormControl","placeholder","aria-label","aria-describedby","isInvalid","textAlign","paddingBottom","Button","variant","block","Spinner","animation","NewEvaluacionForm","redirect","clean","setNombre","setEmail","Card","Img","src","maxHeight","borderBottom","borderBottomWidth","Body","Alert","e","AccountActionTypes","ADD_ACCOUNT","addAccount","type","payload","NotificationActionTypes","ADD_NOT","addNotification","toast","selectAccount","createSelector","state","auth","Routes","GetRequest","url","params","a","Promise","resolve","reject","axios","get","then","response","data","code","message","catch","PostRequest","_params","JSON","stringify","post","headers","PutRequest","put","DeleteRequest","delete","BaseUrl","Registrar","cliente","ListarEvaluacionesCliente","fechaini","fechafin","console","log","request","Actualizar","Eliminar","mapStateToProps","createStructuredSelector","connect","dispatch","setDisabled","history","useHistory","onHandle","evaluacion","reqCliente","RClinte","oRespCliente","REvaluacion","idCliente","setTimeout","IndexPage","Parse","date","d","getDate","m","getMonth","getFullYear","onLoad","date1","setDate1","date2","setDate2","ButtonGroup","DropdownButton","as","title","Dropdown","Item","eventKey","readOnly","ParseDate","show","bottom","width","Paginator","page","setPage","max","number","Pagination","active","onClickPage","size","setData","onUpdate","evalItem","setEval","handleClose","handleEvaluacion","handleActualizar","Modal","onHide","Header","closeButton","Title","Footer","onRemove","ListItem","item","onEdit","StarsRender","registro","ListEvaluacion","Date","loading","modalEdit","setModalEdit","modalRemove","setModalRemove","onHandleEdit","onHandleRemove","LoadData","Clientes","Table","striped","bordered","hover","tmp","slice","length","colSpan","map","renderTable","Math","ceil","selectToast","notification","setShow","right","padding","alignContent","Toast","onClose","delay","autohide","alt","App","Container","createBrowserHistory","path","exact","component","EvaluacionPage","NotFoundPage","to","Boolean","window","location","hostname","match","INITIAL_STATE","AccountReducer","action","NotificationReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fc46436.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Star } from 'react-bootstrap-icons';\r\n\r\nconst StarsRender = (count) => {\r\n    switch(count){\r\n        case 1: return <span><Star/></span>;\r\n        case 2: return <span><Star/><Star/></span>;\r\n        case 3: return <span><Star/><Star/><Star/></span>;\r\n        case 4: return <span><Star/><Star/><Star/><Star/></span>;\r\n        case 5: return <span><Star/><Star/><Star/><Star/><Star/></span>;\r\n        case 6: return <span><Star/><Star/><Star/><Star/><Star/><Star/></span>;\r\n        case 7: return <span><Star/><Star/><Star/><Star/><Star/><Star/><Star/></span>;\r\n        case 8: return <span><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/></span>;\r\n        case 9: return <span><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/></span>;\r\n        case 10: return <span><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/><Star/></span>;\r\n        default: return null;\r\n    }\r\n};\r\n\r\nconst Message = (count) => {\r\n    switch(count){\r\n        case 1: return \"Totalmente decepcionado del servicio 🤬\";\r\n        case 2: return \"Mal servicio, lo evito en lo posible 🤕\";\r\n        case 3: return \"Necesita mejorar 🗣\";\r\n        case 4: return \"Requiere mejoras 🙅🏽‍♂️\";\r\n        case 5: return \"Regular, no siempre funciona bien 🤷🏽‍♀️\";\r\n        case 6: return \"Ha mejorado bastante 💅🏽\";\r\n        case 7: return \"Me gusta 🤘🏽\";\r\n        case 8: return \"Buen producto 💯\";\r\n        case 9: return \"Excelente servicio, lo recomiendo ❤️\";\r\n        case 10: return \"Amo el servicio! me encanta! 💖😍\";\r\n        default: return \"\";\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    StarsRender,\r\n    Message\r\n}","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Star } from 'react-bootstrap-icons';\r\n\r\nconst StarItem = ({ value, index, onChange }) => {\r\n    const baseColor = value > 8 ? '#50B04C' : ( value > 6 ? '#4AC28B' : ( value > 4 ? 'yellow' : ( value > 2 ? 'orange' : 'red')));\r\n    const color = index <= value ? baseColor : 'black';\r\n\r\n    return (\r\n        <Col lg={1} md={1} xs={1} style={{ cursor: \"pointer\" }}  onClick={() => onChange(index)}>\r\n            <Star style={{ cursor: \"pointer\", fontSize: '30' }} fill={color}/>\r\n            <div style={{position: \"absolute\", top: 15, left: 27, fontSize: '10px'}}>{index}</div>\r\n        </Col>\r\n    );\r\n}\r\n\r\nconst CalificadorMetro = ({ onChange, value }) => {\r\n\r\n    let items = [];\r\n\r\n    for(let i = 1; i < 11; i++){\r\n        items.push(<StarItem key={i} value={value} index={i} onChange={onChange}/>);\r\n    }\r\n\r\n    return (\r\n        <Row style={{color: 'black', marginBottom: '15px'}}>\r\n            <Col lg={1} md={1} xs={1}></Col>\r\n            {items}\r\n            <Col lg={1} md={1} xs={1}></Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nexport default CalificadorMetro;","import React, { useState, useEffect } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Star } from 'react-bootstrap-icons';\r\nimport { Formik } from 'formik';\r\n\r\nimport { Message } from '../stats/Stats.Component';\r\nimport CalificadorMetro from '../calificadormetro/CalificadorMetro.Component';\r\n\r\n\r\nfunction validateEmail(value) {\r\n    let error = null;\r\n    if (!value) {\r\n        error = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = 'Invalid email address';\r\n    }\r\n    return error;\r\n}\r\n\r\nfunction validateUsername(value) {\r\n    let error = null;\r\n    if (!value)\r\n        error = 'Required';\r\n    return error;\r\n}\r\n\r\nconst NewForm = ({ account, nombre, email, submit, disabled }) => {\r\n\r\n    const [calificacion, setCalificacion] = useState(5);\r\n    const initials = { name: nombre, email: email };\r\n\r\n    useEffect(() => {\r\n        initials.name = nombre; \r\n        initials.email = email;\r\n    }, [initials, nombre, email]);\r\n    \r\n    const onSubmitFormik = (values, actions) => {\r\n        const valEmail = validateEmail(values.email);\r\n        const valName = validateUsername(values.name);\r\n\r\n        if(valEmail ||  valName){\r\n            actions.setErrors({\r\n                email: valEmail,\r\n                name: valName,\r\n            });\r\n            return;\r\n        }\r\n        submit(values.email, values.name, calificacion);\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={initials} onSubmit={onSubmitFormik}>\r\n        {({ handleChange, handleSubmit, errors, values }) => (\r\n            <div>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"basic-addon1\">Email</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                        placeholder=\"test@gmail.com\"\r\n                        aria-label=\"email\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        name=\"email\"\r\n                        onChange={handleChange}\r\n                        value={values.email}\r\n                        isInvalid={errors.email}\r\n                        disabled={disabled || account !== null}\r\n                    />\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"basic-addon1\">Nombre</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                        placeholder=\"Rodrigo López\"\r\n                        aria-label=\"name\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        name=\"name\"\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        isInvalid={errors.name}\r\n                        disabled={disabled || account !== null}\r\n                    />\r\n                </InputGroup>\r\n                <CalificadorMetro onChange={setCalificacion} value={calificacion}/>\r\n                <div style={{ textAlign: 'center', color: 'black', paddingBottom: '10px'}}>{Message(calificacion)}</div>\r\n                <InputGroup className=\"mb-1\">\r\n                    <Button variant=\"success\" block onClick={handleSubmit} disabled={disabled}>\r\n                        {disabled ? (\r\n                            <Spinner animation=\"border\" variant=\"primary\" />\r\n                        ): (\r\n                            <Star /> \r\n                        )} Calificar\r\n                    </Button>\r\n                </InputGroup>\r\n            </div>\r\n        )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default NewForm;","import React, { useState, useEffect } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormEvaluacion from './NewEvaluacion.Form';\r\n\r\nconst NewEvaluacionForm = ({ submit, redirect, clean, account, disabled }) => {\r\n\r\n    const [nombre, setNombre] = useState(account !== null ? account.nombre : \"\");\r\n    const [email, setEmail] = useState(account !== null ? account.email : \"\");\r\n\r\n    useEffect(() => {\r\n        if(account !== null){\r\n            setNombre(account.nombre);\r\n            setEmail(account.email);\r\n        }else{\r\n            setNombre(\"\"); setEmail(\"\");\r\n        }\r\n    }, [account]);\r\n\r\n    const onClean = (e) => {\r\n        clean();\r\n        setNombre(\"\"); setEmail(\"\");\r\n    }\r\n\r\n    const onRedirect = (e) => {\r\n        redirect();\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Img variant=\"top\" src=\"header.png\" style={{ maxHeight: 160, borderBottom: 'solid gray', borderBottomWidth: 1 }}/>\r\n            <Card.Body>\r\n                <Alert variant=\"success\">\r\n                    <h5>Hola!</h5>\r\n                    <h5 style={{ fontSize: 15 }}>\r\n                        Selecciona las estrellas en base a tu evaluación de nuestro servicio.\r\n                    </h5>\r\n                </Alert>\r\n                <FormEvaluacion \r\n                    account={account} \r\n                    submit={submit} \r\n                    disabled={disabled} \r\n                    nombre={nombre} email={email}\r\n                />\r\n                {account !== null ? (\r\n                    <Row>\r\n                        <Col lg={6}>\r\n                            <InputGroup className=\"mb-1\">\r\n                                <Button variant=\"outline-dark\" block  onClick={onRedirect} disabled={disabled}>\r\n                                    Ver evaluaciones\r\n                                </Button>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                        <InputGroup className=\"mb-1\">\r\n                            <Button variant=\"outline-dark\" block  onClick={onClean} disabled={disabled}>\r\n                                Cerrar sesión\r\n                            </Button>\r\n                        </InputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                ): null}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NewEvaluacionForm;","const AccountActionTypes = {\r\n    ADD_ACCOUNT: 'ADD_ACCOUNT'\r\n};\r\n\r\nexport default AccountActionTypes; ","import AccountActionTypes from './account.types';\r\n\r\nexport const addAccount = (account) => ({\r\n    type: AccountActionTypes.ADD_ACCOUNT,\r\n    payload: account\r\n});","const NotificationActionTypes = {\r\n    ADD_NOT: 'ADD_NOT'\r\n};\r\n\r\nexport default NotificationActionTypes; ","import NotificationActionTypes from './notification.types';\r\n\r\nexport const addNotification = (toast) => ({\r\n    type: NotificationActionTypes.ADD_NOT,\r\n    payload: toast\r\n});","import { createSelector } from 'reselect';\r\n\r\nconst selectAuth = state => state.auth;\r\n\r\nexport const selectAccount = createSelector(\r\n    [selectAuth],\r\n    auth => {\r\n        if(auth != null && auth.account != null) return auth.account;\r\n        return null;\r\n    }\r\n);","export const Routes = {\r\n    Home: \"/customertest\",\r\n    Evaluaciones: \"/customertest/evaluaciones\",\r\n    NotFound: \"/notfound\"\r\n};","import axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst GetRequest = async (url, params) => {\r\n    return new Promise(function(resolve, reject){\r\n        axios.get(url, params)\r\n            .then(response => {\r\n                if(response != null && response.data != null && typeof response.data === \"object\"){\r\n                    if(response.data.code === 1){\r\n                        resolve(response.data.data );\r\n                    }else{\r\n                        reject({ message: response.data.message });\r\n                    }\r\n                }else{ \r\n                    reject({ message: \"No se completó la operación\" });\r\n                }\r\n            }).catch(error => {  \r\n                reject({ message: error.message });\r\n            });\r\n    });\r\n};\r\n\r\nconst PostRequest = async (url, _params) => {\r\n    return new Promise(function(resolve, reject){\r\n        const params = JSON.stringify(_params);\r\n        const headers = { headers: { 'Content-Type': 'application/json' } };\r\n        \r\n        axios.post(url, params, headers)\r\n            .then(response => {\r\n                if(response != null && response.data != null && typeof response.data === \"object\"){\r\n                    if(response.data.code === 1){\r\n                        resolve(response.data.data );\r\n                    }else{\r\n                        reject({ message: response.data.message });\r\n                    }\r\n                }else{ \r\n                    reject({ message: \"No se completó la operación\" });\r\n                }\r\n            }).catch(error => {\r\n                reject({ message: error.message });\r\n            });\r\n    });\r\n};\r\n\r\nconst PutRequest = async (url, params) => {\r\n    return new Promise(function(resolve, reject){\r\n        axios.put(url, params)\r\n            .then(response => {\r\n                if(response != null && response.data != null && typeof response.data === \"object\"){\r\n                    if(response.data.code === 1){\r\n                        resolve(response.data.data );\r\n                    }else{\r\n                        reject({ message: response.data.message });\r\n                    }\r\n                }else{ \r\n                    reject({ message: \"No se completó la operación\" });\r\n                }\r\n            }).catch(error => {  \r\n                reject({ message: error.message });\r\n            });\r\n    });\r\n};\r\n\r\nconst DeleteRequest = async (url, params) => {\r\n    return new Promise(function(resolve, reject){\r\n        axios.delete(url, params)\r\n            .then(response => {\r\n                if(response != null && response.data != null && typeof response.data === 'number'){\r\n                    resolve(\"Operación exitosa\");\r\n                }else{ \r\n                    reject({ message: \"No se completó la operación\" });\r\n                }\r\n            }).catch(error => {  \r\n                reject({ message: error.message });\r\n            });\r\n    });\r\n};\r\n\r\nconst BaseUrl = \"http://dockerspringapp-env.eba-8ubmqnvq.sa-east-1.elasticbeanstalk.com/api/\";\r\n\r\nexport {\r\n    GetRequest,\r\n    PostRequest,\r\n    PutRequest,\r\n    DeleteRequest,\r\n    BaseUrl\r\n}","import { GetRequest, PostRequest, PutRequest, DeleteRequest, BaseUrl } from './AxiosRequests';\r\n\r\nconst ListarClientes = async () => {\r\n   return await GetRequest(`${BaseUrl}cliente`, {})\r\n}\r\n\r\nconst ListarCliente = async (id) => {\r\n   return await GetRequest(`${BaseUrl}cliente/${id}`, {});\r\n}\r\n\r\nconst Registrar = async (cliente) => {\r\n   return await PostRequest(`${BaseUrl}cliente`, cliente);\r\n}\r\n\r\nconst Actualizar = async (cliente) => {\r\n   return await PutRequest(`${BaseUrl}cliente`, cliente);\r\n}\r\n\r\nconst Eliminar = async (id) => {\r\n   return await DeleteRequest(`${BaseUrl}cliente${id}`, {});\r\n}\r\n\r\nexport {\r\n   ListarClientes,\r\n   ListarCliente,\r\n   Registrar,\r\n   Actualizar,\r\n   Eliminar\r\n};","import { GetRequest, PostRequest, PutRequest, DeleteRequest, BaseUrl } from './AxiosRequests';\r\n\r\nconst ListarEvaluaciones = async () => {\r\n   return await GetRequest(`${BaseUrl}evaluacion`, {})\r\n}\r\n\r\nconst ListarEvaluacionesCliente = async (id, fechaini, fechafin) => {\r\n   const url = `${BaseUrl}cliente/evaluacion/${id}/${fechaini}/${fechafin}`;\r\n   console.log(url);\r\n   return await GetRequest(url, {})\r\n}\r\n\r\nconst ListarEvaluacion = async (id) => {\r\n   return await GetRequest(`${BaseUrl}evaluacion/${id}`, {});\r\n}\r\n\r\nconst Registrar = async (request) => {\r\n   return await PostRequest(`${BaseUrl}evaluacion`, request);\r\n}\r\n\r\nconst Actualizar = async (request) => {\r\n   return await PutRequest(`${BaseUrl}evaluacion`, request);\r\n}\r\n\r\nconst Eliminar = async (id) => {\r\n   return await DeleteRequest(`${BaseUrl}evaluacion/${id}`, {});\r\n}\r\n\r\nexport {\r\n   ListarEvaluaciones,\r\n   ListarEvaluacionesCliente,\r\n   ListarEvaluacion,\r\n   Registrar,\r\n   Actualizar,\r\n   Eliminar\r\n};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from 'react-router-dom';\r\nimport View from './NewEvaluacion.View';\r\n\r\nimport { addAccount } from '../../redux/account/account.actions';\r\nimport { addNotification } from '../../redux/notification/notification.actions';\r\nimport { selectAccount } from '../../redux/account/account.selectors';\r\n\r\nimport { Routes } from '../routes/Routes';\r\n\r\nimport { Registrar as RClinte } from '../request/ClienteRequest.Component';\r\nimport { Registrar as REvaluacion } from '../request/EvaluacionRequest.Component';\r\n\r\nconst NewEvaluacionForm = ({ addAccount, account, addNotification }) => {\r\n\r\n    const [disabled, setDisabled] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const onHandle = async (email, nombre, evaluacion) => {\r\n        setDisabled(true);\r\n\r\n        try{\r\n            const reqCliente = { email, nombre };\r\n            const oRespCliente = await RClinte(reqCliente);\r\n            const oRespEval = await REvaluacion({ idCliente: oRespCliente.id, evaluacion });\r\n            setTimeout(() => {\r\n                addAccount(oRespCliente);\r\n                history.push(Routes.Evaluaciones);\r\n                addNotification({ message: \"Se registró su evaluación con éxito\", error: false });\r\n                setDisabled(false);\r\n            }, 2000);\r\n        }catch(ex){\r\n            setDisabled(false);\r\n            addNotification({ message: ex.message, error: true });\r\n        }\r\n    }\r\n\r\n    const onHandleClean = () => {\r\n        addAccount(null);\r\n    }\r\n\r\n    const onHandleRedirect = () => {\r\n        history.push(Routes.Evaluaciones);\r\n    }\r\n\r\n    return (\r\n        <View \r\n            disabled={disabled}\r\n            redirect={onHandleRedirect}\r\n            clean={onHandleClean}\r\n            submit={onHandle} \r\n            account={account}/>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps =  createStructuredSelector({\r\n    account: selectAccount\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addAccount: account => dispatch(addAccount(account)),\r\n    addNotification: toast =>  dispatch(addNotification(toast))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEvaluacionForm);","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport NewEvaluacionForm from '../../components/newevaluacion/NewEvaluacionForm.Component';\r\n\r\nconst IndexPage = () => {\r\n    return (\r\n        <Row>\r\n            <Col></Col>\r\n            <Col xs={12} lg={6} md={10}>\r\n                <NewEvaluacionForm/>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default IndexPage;","const Parse = (date) => {\r\n    if(date === null) return \"\";\r\n    var d = date.getDate();\r\n    var m = date.getMonth() + 1;\r\n    var y = date.getFullYear();\r\n    return '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\r\n};\r\n\r\nexport default Parse;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Calendar from 'react-calendar';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nimport ParseDate from '../utils/DateParser';\r\nimport { addAccount } from '../../redux/account/account.actions';\r\n\r\nimport { Routes } from '../routes/Routes';\r\n\r\nconst HeaderList = ({ account, addAccount, onLoad, date1, setDate1, date2, setDate2 }) => {\r\n\r\n    const history = useHistory();\r\n    const onHandleNew = () => history.push(Routes.Home);\r\n    const onHandleClean = () => addAccount(null);\r\n    \r\n    const onChangeDate1 = date => setDate1({ show: false, value: date });\r\n    const onChangeDate2 = date => setDate2({ show: false, value: date });\r\n\r\n    const onClickCal1 = () => setDate1({ ...date1, show: !date1.show });\r\n    const onClickCal2 = () => setDate2({ ...date2, show: !date2.show });\r\n\r\n    const onHandle = () => onLoad();\r\n\r\n    return (\r\n        <Card style={{ marginBottom: '10px', color: 'black'}}>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col lg={9}>\r\n                        <div>{account.nombre}</div>\r\n                        <div>{account.email}</div>\r\n                    </Col>\r\n                    <Col lg={3}>\r\n                        <ButtonGroup>\r\n                            <DropdownButton block=\"true\" as={ButtonGroup} title=\"Opciones\">\r\n                                <Dropdown.Item eventKey=\"1\" onClick={onHandleNew}>Nueva evaluación</Dropdown.Item>\r\n                                <Dropdown.Item eventKey=\"2\" onClick={onHandleClean}>Cerrar sesión</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <span className=\"calendar-span\">Desde:</span> \r\n                        <FormControl className=\"calendar-input\" readOnly={true} value={ParseDate(date1.value)} onClick={onClickCal1} block=\"true\"/>\r\n                        { date1.show ? (\r\n                            <Calendar className=\"calendar\"\r\n                                onChange={onChangeDate1}\r\n                                value={date1.value}\r\n                            />\r\n                        ) : ( null )}\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <span className=\"calendar-span\">Hasta:</span> \r\n                        <FormControl className=\"calendar-input\" readOnly={true} value={ParseDate(date2.value)} onClick={onClickCal2} block=\"true\"/>\r\n                        <div>\r\n                            { date2.show ? (\r\n                                <Calendar className=\"calendar\"\r\n                                    onChange={onChangeDate2}\r\n                                    value={date2.value}\r\n                                />\r\n                            ) : ( null )}\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={4} style={{ position: 'relative'}}>\r\n                        <Button \r\n                            onClick={onHandle}\r\n                            style={{ position: 'absolute', bottom: '0', width: '92%' }}\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addAccount: account => dispatch(addAccount(account))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(HeaderList);","import React from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\n\r\nconst Paginator = ({ page, setPage, max }) => {\r\n\r\n    if(max <= 1) return null;\r\n\r\n    const onClickPage = (number) => {\r\n        setPage(number - 1);\r\n    }\r\n\r\n    let items = [];\r\n    for (let number = 1; number <= max; number++) {\r\n        items.push(\r\n            <Pagination.Item key={number} active={number === (page + 1)} onClick={() => onClickPage(number)}>\r\n            {number}\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Pagination size=\"sm\">{items}</Pagination>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport { Crop, Pencil } from 'react-bootstrap-icons';\r\n\r\nimport { Message } from '../stats/Stats.Component';\r\nimport CalificadorMetro from '../calificadormetro/CalificadorMetro.Component';\r\nimport { Actualizar } from '../request/EvaluacionRequest.Component';\r\n\r\nimport { addNotification } from '../../redux/notification/notification.actions';\r\n\r\nconst ModalEdit = ({ data, setData, addNotification, onUpdate }) => {\r\n    \r\n    const [disabled, setDisabled] = useState(false);\r\n    const [evalItem, setEval] = useState(data.value);\r\n    \r\n    const handleClose = () => {\r\n        if(disabled) return;\r\n        setData({ show: false, value: {} });\r\n    }\r\n    \r\n    const handleEvaluacion = async (e) => setEval({ ...evalItem, evaluacion: e}); \r\n\r\n    const handleActualizar = async (e) => {\r\n        setDisabled(true);\r\n        let toast = {};\r\n        try{\r\n            await Actualizar(evalItem);\r\n            toast = { message: \"Se actualizó la evaluación con éxito\", error: false };\r\n        }catch(ex){\r\n            toast = { message: ex.message, error: true };\r\n        }\r\n        setTimeout(() => {\r\n            setData({ show: false, value: {} });\r\n            addNotification(toast);\r\n            onUpdate();\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Editar evaluación</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <CalificadorMetro onChange={handleEvaluacion} value={evalItem.evaluacion}/>\r\n                <div style={{ textAlign: 'center', color: 'black', paddingBottom: '10px'}}>{Message(evalItem.evaluacion)}</div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose} disabled={disabled}>\r\n                    <Crop/>Cancelar\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleActualizar} disabled={disabled}>\r\n                    <Pencil/>Actualizar\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNotification: toast =>  dispatch(addNotification(toast))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ModalEdit);","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\nimport { Crop, Trash } from 'react-bootstrap-icons';\r\n\r\nimport { Eliminar } from '../request/EvaluacionRequest.Component';\r\nimport { addNotification } from '../../redux/notification/notification.actions';\r\n\r\nconst ModalRemove = ({ data, setData, addNotification, onRemove }) => {\r\n    \r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        if(disabled) return; \r\n        setData({ show: false, value: {} });\r\n    }\r\n    \r\n    const handleEvaluacion = async () => {\r\n        setDisabled(true);\r\n        let toast = {};\r\n        try{\r\n            await Eliminar(data.value.id);\r\n            toast = { message: \"Se eliminó la evaluación seleccionada\", error: false };\r\n        }catch(ex){\r\n            toast = { message: ex.message, error: true };\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setData({ show: false, value: {} });\r\n            addNotification(toast);\r\n            onRemove();\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <Modal show={data.show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Alerta</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>¿Seguro que deseas remover esta evaluación? esta operación no se puede revertir.</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose} disabled={disabled}>\r\n                    <Crop/> Cancelar\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleEvaluacion} disabled={disabled}>\r\n                    <Trash/> Eliminar\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNotification: toast =>  dispatch(addNotification(toast))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ModalRemove);","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { StarsRender, Message } from '../stats/Stats.Component';\r\nimport { Trash, Pencil } from 'react-bootstrap-icons';\r\n\r\nconst ListItem = ({ index , item, onEdit, onRemove }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td style={{ fontSize: '15px' }}><span>({item.evaluacion})</span> {StarsRender(item.evaluacion)}</td>\r\n            <td style={{ fontSize: '15px' }}>{Message(item.evaluacion)}</td>\r\n            <td style={{ fontSize: '15px' }}>{item.registro}</td>\r\n            <td>\r\n                <Button variant=\"warning\" onClick={() => onEdit(item)}><Trash/> Editar</Button>{' '}\r\n                <Button variant=\"danger\" onClick={() => onRemove(item)}><Pencil/> Eliminar</Button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React, { useState } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nimport HeaderList from '../headerlist/HeaderList.Component';\r\nimport Paginator from '../paginator/Paginator.Component';\r\nimport ModalEdit from '../modaledit/ModalEdit.Component';\r\nimport ModalRemove from '../modaledit/ModalRemove.Component';\r\nimport ListItem from './ListItem.Component';\r\nimport { ListarEvaluacionesCliente } from '../request/EvaluacionRequest.Component';\r\n\r\nimport ParseDate from '../utils/DateParser';\r\n\r\nconst ListEvaluacion = ({ account }) => {\r\n    \r\n    const [date1, setDate1] = useState({ value: new Date(), show: false });\r\n    const [date2, setDate2] = useState({ value: new Date(), show: false });\r\n\r\n    const [data, setData] = useState({ data: [], error: false, loading: true });\r\n    const [page, setPage] = useState(0);\r\n    const [modalEdit, setModalEdit] = useState({ show: false, value: {}});\r\n    const [modalRemove, setModalRemove] = useState({ show: false, value: {}});\r\n    const rowsPerPage = 5;\r\n\r\n    const onHandleEdit = (item) => setModalEdit({ show: true, value: item });\r\n    const onHandleRemove = (item) => setModalRemove({ show: true, value: item });\r\n\r\n    const LoadData = async () => {\r\n        try {\r\n            const Clientes = await ListarEvaluacionesCliente(account.id, ParseDate(date1.value), ParseDate(date2.value));\r\n            setData({ data: Clientes, error: false, loading: false });\r\n        } catch(ex) {\r\n            setData({ data: [], error: true, loading: false });\r\n        }\r\n        setPage(0);\r\n    }\r\n\r\n    const renderTable = () => {\r\n        const tmp = data.data.slice(rowsPerPage * page, (rowsPerPage * page) + rowsPerPage);\r\n        if(tmp.length === 0){\r\n            return (<tr>\r\n                <td className=\"center\" colSpan={4}>No hay datos</td>\r\n            </tr>);\r\n        }\r\n        return tmp.map((item, index) => (\r\n            <ListItem  key={index}\r\n                index={index} item={item}\r\n                onEdit={onHandleEdit} onRemove={onHandleRemove}\r\n            />\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <HeaderList \r\n                account={account} \r\n                onLoad={LoadData}\r\n                date1={date1} setDate1={setDate1}\r\n                date2={date2} setDate2={setDate2}/>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Calificación</th>\r\n                        <th>Descripción</th>\r\n                        <th>Fecha</th>\r\n                        <th>Opciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderTable()}\r\n                </tbody>\r\n            </Table>\r\n            {data.data ? (\r\n                <Paginator page={page} setPage={setPage} max={Math.ceil(data.data.length / rowsPerPage)}/>\r\n            ) : null }\r\n            {modalEdit.show ? (\r\n                <ModalEdit \r\n                    data={modalEdit} \r\n                    setData={setModalEdit}\r\n                    onUpdate={LoadData}/>\r\n            ) : null }\r\n            {modalRemove.show ? (\r\n                <ModalRemove \r\n                    data={modalRemove} \r\n                    setData={setModalRemove}\r\n                    onRemove={LoadData}/>\r\n            ) : null }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListEvaluacion;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport ListEvaluacion from '../../components/list/ListEvaluacion.Component';\r\n\r\nimport { selectAccount } from '../../redux/account/account.selectors';\r\nimport { Routes } from '../../components/routes/Routes';\r\n\r\nconst EvaluacionPage = ({ account }) => {\r\n\r\n    const history = useHistory();\r\n    const onHandleNew = () => history.push(Routes.Home);\r\n\r\n    return (\r\n        <Row>\r\n            <Col></Col>\r\n            <Col xs={12} lg={10} md={11}>\r\n            {account !== null ? (\r\n                <ListEvaluacion account={account}/>\r\n            ) : (\r\n                <div>\r\n                    No ingresaste aun\r\n                    <Button onClick={onHandleNew}>Registrar evaluación</Button>\r\n                </div>\r\n            )}\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\nconst mapStateToProps =  createStructuredSelector({\r\n    account: selectAccount\r\n});\r\n\r\nexport default connect(mapStateToProps)(EvaluacionPage);","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Routes } from '../../components/routes/Routes';\r\n\r\nconst IndexPage = () => {\r\n\r\n    const history = useHistory();\r\n    const onHandleNew = () => history.push(Routes.Home);\r\n\r\n    return (\r\n        <Row>\r\n            <Col></Col>\r\n            <Col xs={12} lg={5} md={7}>\r\n                <p>No encontramos lo que estas buscando</p>\r\n                <Button onClick={onHandleNew}>Volver a inicio</Button>\r\n            </Col>\r\n            <Col></Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default IndexPage;","import { createSelector } from 'reselect';\r\n\r\nconst selectNotification = state => state.notification;\r\n\r\nexport const selectToast = createSelector(\r\n    [selectNotification],\r\n    notification => {\r\n        if(notification != null && notification.toast != null) return notification.toast;\r\n        return null;\r\n    }\r\n);","import React, { useState, useEffect } from 'react';\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectToast } from '../../redux/notification/notification.selectors';\r\nimport { addNotification } from '../../redux/notification/notification.actions';\r\n\r\nconst ToastComponent = ({ toast, addNotification }) => {\r\n    \r\n    const [show, setShow] = useState(false);\r\n\r\n    const handle = () => {\r\n        setShow(false);\r\n        addNotification(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setShow(toast !== null)\r\n    }, [toast]);\r\n\r\n    return (\r\n        (toast !== null) ? (\r\n            <div style={{ position: 'fixed', top: 0, right: 0, padding: '10px', alignContent: 'right' }}>\r\n                <Toast className={toast.error ? 'ToastError' : 'ToastOk'} onClose={handle} show={show} delay={2000} autohide>\r\n                    <Toast.Header>\r\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\"/>\r\n                        <strong className=\"mr-auto\">{toast.error ? 'Alerta' : 'Mensaje'}</strong>\r\n                        <small>Justo ahora</small>\r\n                    </Toast.Header>\r\n                    <Toast.Body>{toast.message}</Toast.Body>\r\n                </Toast>\r\n            </div>\r\n        ) : ( null )\r\n    );\r\n}\r\n\r\nconst mapStateToProps =  createStructuredSelector({\r\n    toast: selectToast\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addNotification: toast =>  dispatch(addNotification(toast))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToastComponent);","import React from 'react';\nimport './styles/App.css';\nimport Container from 'react-bootstrap/Container';\nimport { Switch, Router, Route, Redirect } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport IndexPage from './pages/index/Index.Page';\nimport EvaluacionPage from './pages/evaluaciones/Evaluacion.Page';\nimport NotFoundPage from './pages/notfound/NotFound.Page';\n\nimport Toast from './components/toast/Toast.Component';\nimport { Routes } from './components/routes/Routes';\n\nconst App = () => (\n    <div className=\"App-header\">\n        <Container>\n            <Router history={createBrowserHistory()}>\n                <Switch>\n                    <Route path={Routes.Home} exact component={IndexPage}/>\n                    <Route path={Routes.Evaluaciones} exact component={EvaluacionPage}/>\n                    <Route path={Routes.NotFound} exact component={NotFoundPage}/>\n                    <Redirect to={Routes.NotFound} />\n                </Switch>\n            </Router>\n        </Container>\n        <Toast/>\n    </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import AccountActionTypes from './account.types';\r\n\r\nconst INITIAL_STATE = {\r\n    account: null\r\n};\r\n\r\nconst AccountReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case AccountActionTypes.ADD_ACCOUNT:\r\n            return {\r\n                ...state,\r\n                account: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AccountReducer;","import NotificationActionTypes from './notification.types';\r\n\r\nconst INITIAL_STATE = {\r\n    toast: null\r\n};\r\n\r\nconst NotificationReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case NotificationActionTypes.ADD_NOT:\r\n            return {\r\n                ...state,\r\n                toast: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default NotificationReducer;","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist'; \r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport AccountReducer from './account/account.reducer';\r\nimport NotificationReducer from './notification/notification.reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [ 'auth' ]\r\n}\r\n\r\nconst rootReducer =  combineReducers({\r\n    auth: AccountReducer,\r\n    notification: NotificationReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\n//import logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [];\r\n/*if(process.env.NODE_ENV === \"development\"){\r\n    middlewares.push(logger);\r\n}*/\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.css';\nimport 'react-calendar/dist/Calendar.css';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport {store, persistor } from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <PersistGate persistor={persistor}>\n                    <App />\n                </PersistGate>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}